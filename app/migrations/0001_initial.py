# Generated by Django 4.1.4 on 2022-12-07 08:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=150)),
                ('members', models.PositiveIntegerField(default=0)),
                ('education_type', models.CharField(choices=[('on', 'Online'), ('off', 'Offline')], default='on', max_length=3)),
                ('created', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('df', 'Draft'), ('pb', 'Published')], default='pb', max_length=2)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Course Entrys',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('presentation_file', models.FileField(upload_to='app/lesson/presentation_file/')),
                ('support_downloads', models.FileField(upload_to='app/lesson/support_downloads/')),
                ('status', models.CharField(choices=[('df', 'Draft'), ('pb', 'Published')], default='pb', max_length=2)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LessonPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField()),
                ('video', models.FileField(upload_to='app/lesson_part/videos/')),
                ('status', models.CharField(choices=[('df', 'Draft'), ('pb', 'Published')], default='pb', max_length=2)),
            ],
            options={
                'verbose_name': 'Lesson Part',
                'verbose_name_plural': 'Lesson Parts',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('difficulty', models.CharField(choices=[('e', 'Easy'), ('m', 'Medium'), ('h', 'Hard')], default='e', max_length=1)),
                ('status', models.CharField(choices=[('df', 'Draft'), ('pb', 'Published')], default='pb', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('image', models.ImageField(upload_to='app/teachers/images/')),
                ('date_birth', models.DateTimeField()),
                ('work_company', models.CharField(max_length=100)),
                ('work_company_logo', models.ImageField(upload_to='app/teachers/work_company_logo/')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255)),
                ('description', models.TextField()),
                ('members', models.PositiveIntegerField(blank=True, default=0)),
                ('status', models.CharField(choices=[('df', 'Draft'), ('pb', 'Published')], default='pb', max_length=2)),
                ('courses', models.ManyToManyField(blank=True, null=True, to='app.course')),
            ],
            options={
                'verbose_name': 'Speciality Entrys',
                'verbose_name_plural': 'Speciality',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=150)),
                ('price', models.PositiveIntegerField()),
                ('support_day', models.PositiveIntegerField(default=45)),
                ('members', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('df', 'Draft'), ('pb', 'Published')], default='pb', max_length=2)),
                ('lessons', models.ManyToManyField(blank=True, null=True, to='app.lesson')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.teacher')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='part',
            field=models.ManyToManyField(blank=True, null=True, to='app.lessonpart'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='task',
            field=models.ManyToManyField(blank=True, null=True, to='app.task'),
        ),
        migrations.AddField(
            model_name='course',
            name='modules',
            field=models.ManyToManyField(blank=True, null=True, to='app.module'),
        ),
    ]
